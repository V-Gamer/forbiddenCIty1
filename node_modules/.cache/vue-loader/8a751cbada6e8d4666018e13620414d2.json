{"remainingRequest":"c:\\Vue\\forbiddenCity\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!c:\\Vue\\forbiddenCity\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!c:\\Vue\\forbiddenCity\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Vue\\forbiddenCity\\src\\view\\home\\index.vue?vue&type=template&id=bc2d8efa&scoped=true&","dependencies":[{"path":"c:\\Vue\\forbiddenCity\\src\\view\\home\\index.vue","mtime":1626097288736},{"path":"c:\\Vue\\forbiddenCity\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Vue\\forbiddenCity\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"c:\\Vue\\forbiddenCity\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Vue\\forbiddenCity\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}